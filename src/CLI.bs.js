// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Json = require("@glennsl/bs-json/src/Json.bs.js");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");

var colorsDir = "design/variables/--colors";

var clrs = List.map((function (json) {
        return /* record */[
                /* name */Caml_array.caml_array_get(Json_decode.field("overrideValues", (function (param) {
                            return Json_decode.array((function (param) {
                                          return Json_decode.field("value", Json_decode.string, param);
                                        }), param);
                          }), json), 0),
                /* hex */Caml_array.caml_array_get(Json_decode.field("overrideValues", (function (param) {
                            return Json_decode.array((function (param) {
                                          return Json_decode.field("value", Json_decode.string, param);
                                        }), param);
                          }), json), 1)
              ];
      }), List.map(Json.parseOrRaise, List.map((function (file) {
                return Fs.readFileSync(colorsDir + ("/" + file), "utf8");
              }), List.filter((function (file) {
                      return +(file !== "page.json");
                    }))($$Array.to_list(Fs.readdirSync(colorsDir))))));

function buildCssVarsAux(_acc, _param) {
  while(true) {
    var param = _param;
    var acc = _acc;
    if (param) {
      var match = param[0];
      _param = param[1];
      _acc = acc + ("  --" + (match[/* name */0] + (": #" + (match[/* hex */1] + ";\n"))));
      continue ;
      
    } else {
      return acc;
    }
  };
}

function buildCssVars(vars) {
  return buildCssVarsAux("", vars);
}

var output = ":root {\n" + (buildCssVarsAux("", clrs) + "}");

Fs.writeFileSync("output/css-next.css", output, "utf8");

exports.colorsDir = colorsDir;
exports.clrs = clrs;
exports.buildCssVarsAux = buildCssVarsAux;
exports.buildCssVars = buildCssVars;
exports.output = output;
/* clrs Not a pure module */
